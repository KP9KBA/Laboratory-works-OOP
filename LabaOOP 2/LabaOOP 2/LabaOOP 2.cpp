#include <iostream>
#include <iomanip>//for setw()
#include <conio.h>//for getche()

using namespace std;

int main() {
	setlocale(LC_ALL, "Russian");
	int a;
	cout << "Введите номер задания лабораторной работы: ";
	cin >> a;
	switch (a) {
	case 1: {
		/*Предположим, вы хотите создать таблицу умножения на заданное число.
			Напишите программу, которая позволяет пользователю ввести это число,
			а затем генерирует таблицу размером 20 строк на 10 столбцов.Первые
			строки результата работы программы должны выглядеть примерно следующим образом :
		Введите число : 7 
		7 14 21 28 35 42 49 56 63 70 
		77 84 91 98 105 112 119 126 133 140 
		147 154 161 168 175 182 189 196 203 210*/

			// displays multiples of a number
			unsigned long n;                    //число

			cout << "\nEnter a number: ";
			cin >> n;                           //ввод числа
			for (int j = 1; j <= 200; j++)           //цикл от 1 до 200
			{
				cout << setw(5) << j * n << "  ";  //print multiple of n
				if (j % 10 == 0)                  //every 10 numbers,
					cout << endl;                 //start new line
			}
	}break;
	case 2: {
		/*Напишите программу, предлагающую пользователю осуществить перевод температуры из шкалы Цельсия в шкалу Фаренгейта или наоборот, а затем осуществите преобразование.Используйте в программе переменные вещественного типа.Взаимодействие программы с пользователем может выглядеть следующим образом :
		Начните 1 для перевода шкалы Цельсия в шкалу Фаренгейта.
			2 для перевода шкалы Фаренгейта в шкалу Цельсия : 1
			Введите температуру по Фаренгейту : 70
			Значение по Цельсию : 21.111111*/

			// converts fahrenheit to centigrad, or
			// centigrad to fahrenheit
			int response;
			double temper;

			cout << "\nВведите 1 для перевода шкалы Цельсия в шкалу Фаренгейт,"
				<< "\n2 для перевода шкалы Фаренгейта в шкалу Цельсия: ";
			cin >> response;
			if (response == 2)
			{
				cout << "Введите температуру по Фаренгейту: ";
				cin >> temper;
				cout << "Значение по Цельсию " << 5.0 / 9.0 * (temper - 32.0);
			}
			else
			{
				cout << "Введите температуру по Цельсию: ";
				cin >> temper;
				cout << "Значение по Фаренгейту " << 9.0 / 5.0 * temper + 32.0;
			}
			cout << endl;
	}break;
	case 3: {
		/*Операции ввода, такие, как cin, должны уметь преобразовывать последовательность
		символов в число.Напишите программу, которая позволяет
		пользователю ввести шесть цифр, а затем выводит результат типа long на
		экране.Каждая цифра должна считываться отдельно при помощи функции getche().
		Вычисление значения переменной производится путем умножения текущего ее значения на 10 
		и сложения с последней введенной цифрой(для того, чтобы из кода символа получить цифру, 
		вычтите из него 48 или '0').Примером результата работы программы может служить следующий :
		Введите число : 123456
			Вы ввел / число 123456*/

			// makes a number out of digits
			char ch;
			unsigned long total = 0;          //this holds the number

			cout << "\nВведите число: ";
			while ((ch = _getch()) != '\r')    //quit on Enter
				total = total * 10 + ch - '0';     //add digit to total*10
			cout << "\nЧисло: " << total << endl;
	}break;
	case 4: {
		/*Создайте эквивалент калькулятора, выполняющего четыре основных арифметических операции. 
		Программа должна запрашивать ввод пользователем первого операнда, знака операции и второго 
		операнда. Для хранения операндов следует использовать переменные вещественного типа. 
		Выбрать операцию можно при помощи оператора switch. В конце программа должна отображать 
		результат на экране. Результат работы программы с пользователем может выглядеть следующим образом:*/
		// models four-function calculator
			double n1, n2, ans;
			char oper, ch;

			do {
				cout << "\nEnter first number, operator, second number: ";
				cin >> n1 >> oper >> n2;
				switch (oper)
				{
				case '+':  ans = n1 + n2;  break;
				case '-':  ans = n1 - n2;  break;
				case '*':  ans = n1 * n2;  break;
				case '/':  ans = n1 / n2;  break;
				default:   ans = 0;
				}
				cout << "Answer = " << ans;
				cout << "\nDo another (Enter 'y' or 'n')? ";
				cin >> ch;
			} while (ch != 'n');
			

	}break;
	case 5: {
		/*При помощи цикла for изобразите на экране пирамиду из символов 'X'.
		Верхняя часть пирамиды должна выглядеть следующим образом:
		х
	  ххх
	ххххх
  ххххххх
ххххххххх
Вся пирамида должна быть высотой не 5 линий, как изображено здесь, а 20 линий.
Одним из способов ее построения может служить использование двух вложенных циклов,
из которых внутренний будет заниматься печатанием символов 'X' и пробелов, а другой
осуществлять переход на одну строку вниз.*/

		for (int j = 0; j < 19; j++)
		{
			cout << "  ";
		}
		cout << "х";
		cout << '\n';

		for (int i = 1; i < 20; i++)
		{
			for (int j = 0; j < 20 - (i + 1); j++)
			{
				cout << "  ";
			}
			cout << "х";
			for (int k = 1; k <= i; k++) {
				cout << "xх";
			}

			cout << '\n';
		}
	}break;
	case 6: {
		/*Измените программу factor таким образом, чтобы она циклически запрашивала ввод 
		пользователем числа и вычисляла его факториал, пока пользователь не введет 0. 
		В этом случае программа должна завершиться.При необходимости вы можете использовать 
		соответствующие операторы программы factor в цикле do или while.*/
			// factor.cpp
			// calculates factorials, demonstrates FOR loop
			unsigned int numb;
			unsigned long fact;             //long for larger numbers
			do {
				cout << "Enter a number: ";
				cin >> numb;    //get number
				fact = 1;
				for (int j = numb; j > 0; j--)         //multiply 1 by
					fact *= j;                     //numb, numb-1, ..., 2, 1
				cout << "Factorial is " << fact << endl;
			} while (numb!=0);
	}break;
	case 7: {
		/*7.Напишите программу, рассчитывающую сумму денег, которые вы получите 
		при вложении начальной суммы с фиксированной процентной ставкой дохода через 
		определенное количество лет. Пользователь должен вводить с клавиатуры начальный вклад, 
		число лет и процентную ставку. Примером результата работы программы может быть следующий:
Введите начальный вклад: 3000
Введите число лет: 10
Введите процентную ставку: 5.5
через 10 пет вы получите 5124.43 доллара.
В конце первого года вы получите 3 000 + (3 000*0.055) = 3165 долларов. В конце следующего года 
вы получите 3 165 + (3 165*0.055) = 3339.08 долларов. Подобные вычисления удобно производить с помощью цикла for.*/
		int  let;
		float vclad, proc;
		cout << "Введите начальный вклад: ";
		cin >> vclad;
		cout << "Введите число лет: ";
		cin >> let;
		cout << "Введите процентную ставку: ";
		cin >> proc;
		for (int i = 0; i < let; i++)
			vclad = vclad + (vclad * (proc/100));
		cout << "Через " << let << " вы получите " << vclad << " долларов";
	}break;
	case 8: {
		/*Напишите программу, которая циклически будет запрашивать ввод поль
зователем двух денежных сумм, выраженных в фунтах, шиллингах и пен
сах (см. упражнения 10 и 12 предыдущего набора упражнений). Программа должна складывать 
введенные суммы и выводить на экран результат, также выраженный в фунтах, шиллингах и пенсах. 
После каждой итерации программа должна спрашивать пользователя, желает ли он продолжать работу программы.
При этом рекомендуется использовать цикл do. Естественной формой
взаимодействия программы с пользователем была бы следующая:
Введите первую сумму   £5 10 6 
Введите вторую сумму   £3 2 6 
Всего   £8 13 0 
Продолжить (у/n)?
Для того чтобы сложить две суммы, вам необходимо учесть заем одного шиллинга в том случае, 
если число пенсов окажется больше 11, и одного фунта, если число шиллингов окажется больше 19.*/
		char C = ' ';
		do {
			int pound, shilling, penny, po, shi, pe;

			cout << "Введите количество фунтов, шиллингов, пенсов (как в примере: фунты шиллинги пенсы): ";
			cin >> pound >>  shilling >> penny;
			cout << "Введите второе количество фунтов, шиллингов, пенсов (как в примере: фунты шиллинги пенсы): ";
			cin >> po  >> shi  >> pe;
			
			po += pound; shi += shilling; pe += penny;
			if (pe % 12 >= 0) {
				shi += pe / 12;
				pe %= 12;
			}
			if (shi % 20 >= 0) {
				po += shi / 20;
				shi %= 20;
			}
			
			cout << "Всего  " << po << ' ' << shi << ' ' << pe << endl;

			cout << "Вы хотете продолжить? (да = y, нет = n) ";
			cin >> C;
		} while (C != 'n');
	}break;
	case 9: {
		/*Представьте, что вы собираетесь пригласить к себе шестерых гостей, но за
вашим столом могут разместиться всего лишь 4 человека Сколькими
способами можно разместить четырех из шести гостей за обеленным сто
лом? Каждый из шести гостей может разместиться на первом стуле. Каж
дый из оставшихся пяти гостей может занять второй стул. На третьем
стуле может разместиться один их четырех гостей, и на четвертом — один
из трех оставшихся гостей. Двоим из гостей не достанется ни одного
места. Таким образом, число возможных рассадок гостей за столом равно
6*5*4*3 = 360. Напишите программу, которая будет производить аналогич
ные вычисления для любого числа гостей и любого числа мест за столом
(при этом предполагается, что число гостей не меньше числа мест). Про
грамма не должна быть сложной, и вычисление можно организовать с по
мощью простого цикла for.*/
		int N, R, S = 1, i;
		//N- число гостей  R- число мест S- число способов рассадки
		cout << "Введите число гостей: ";
		cin >> N;
		cout << "Введите число мест за столом: ";
		cin >> R;
		if (N >= R) {
			for (i = 0; i < R; i++) {
				S *= N;
				N--;
			}
		}
		cout << "Количество способов рассадки - " << S << endl;
	}break;
	case 10: {
		/*Модифицируйте программу, описанную в упражнении 7, так, 
		чтобы вместо вычисления текущей суммы на вашем счете она вычисляла, 
		сколько лет потребуется для того, чтобы при заданной процентной ставке и 
		величине начального вклада сумма на вашем счете достигла запрашиваемого вами значения. 
		Для хранения найденного числа лет используйте переменную целого типа 
		(можно отбросить дробную часть значения, полученного в результате расчета). 
		Самостоятельно выберите тип цикла, подходящий для решения задачи.*/
		int  let = 0;
		float vclad, proc, kvclad;
		cout << "Введите начальный вклад: ";
		cin >> vclad;
		cout << "Введите конечную сумму вклада: ";
		cin >> kvclad;
		cout << "Введите процентную ставку: ";
		cin >> proc;
		do {
			vclad = vclad + (vclad * (proc / 100));
			let++;
		} while (vclad <= kvclad);
		cout << let << " потребуется, чтобы получить вклад размером " << kvclad << endl;
	}break;
	case 11: {
		/*Создайте калькулятор, выполняющий действия над денежными суммами, 
		выраженными в фунтах, шиллингах и пенсах (см. упражнения 10 и 12 предыдущего набора заданий). 
		Калькулятор должен складывать и вычитать вводимые значения, 
		а также производить умножение денежной суммы на вещественное число 
		(операция умножения двух денежных сумм не имеет смысла, поскольку квадратных денежных единиц не существует. 
		Деление одной денежной суммы на другую мы тоже не будем рассматривать). 
		Организация взаимодействия с калькулятором описана в упражнении 4 этого набора упражнений.*/
		double n1, n2, ans;
		char oper, ch;
		int pound, shilling, penny, po, shi, pe;

		do {
			cout << "Введите оператор (+, -, *(умножить на вещественное число)): ";
			cin >> oper;
			
			switch (oper)
			{
			case '+': {
				cout << "Введите количество фунтов, шиллингов, пенсов (как в примере: фунты шиллинги пенсы): ";
				cin >> pound >> shilling >> penny;
				cout << "Введите второе количество фунтов, шиллингов, пенсов (как в примере: фунты шиллинги пенсы): ";
				cin >> po >> shi >> pe;

				po += pound; shi += shilling; pe += penny;
				if (pe % 12 >= 0) {
					shi += pe / 12;
					pe %= 12;
				}
				if (shi % 20 >= 0) {
					po += shi / 20;
					shi %= 20;
				}

				cout << "Результат: " << po << ' ' << shi << ' ' << pe << endl;
			} break;
			case '-': {
				cout << "Введите количество фунтов, шиллингов, пенсов (как в примере: фунты шиллинги пенсы): ";
				cin >> po >> shi >> pe;
				cout << "Введите второе количество фунтов, шиллингов, пенсов (как в примере: фунты шиллинги пенсы): ";
				cin >> pound >> shilling >> penny;

				po -= pound; shi -= shilling; pe -= penny;
				if (pe % 12 >= 0) {
					shi += pe / 12;
					pe %= 12;
				}
				if (shi % 20 >= 0) {
					po += shi / 20;
					shi %= 20;
				}

				cout << "Результат: " << po << ' ' << shi << ' ' << pe << endl;
			} break;
			case '*': {
				int X;//Х-вещественное число
				cout << "Введите количество фунтов, шиллингов, пенсов (как в примере: фунты шиллинги пенсы): ";
				cin >> pound >> shilling >> penny;
				cout << "Введите вещественное число: ";
				cin >> X;

				pound *= X; shilling *= X; penny *= X;
				if (penny % 12 >= 0) {
					shilling += penny / 12;
					penny %= 12;
				}
				if (shilling % 20 >= 0) {
					pound += shilling / 20;
					shilling %= 20;
				}

				cout << "Результат: " << pound << ' ' << shilling << ' ' << penny << endl;
			} break;
			default: ans = 0;
			}
			cout << "Вы хотете продолжить? (да = y, нет = n) ";
			cin >> ch;
		} while (ch != 'n');
	}break;
	case 12: {
		/*Создайте калькулятор, выполняющий четыре арифметических действия над дробями 
		(см. упражнение 9 предыдущего набора и упражнение 4 этого набора). Формулы, 
		демонстрирующие выполнение арифметических операций над дробями, приведены ниже.
Сложение: a/b + c/d = (a*d + b*c)/(b*d) Вычитание: a/b - c/d = (a*d - b*c)/(b*d) Умножение: a/b*c/d = (a*c)/(b*d) 
Деление: a/b/c/d = (a*d)/(b*c)
Пользователь должен сначала ввести первый операнд, затем знак операции и второй операнд. 
После вычисления результата программа должна отобразить его на экране и запросить пользователя 
о его желании произвести еще одну операцию.*/
		double n1, n2, ans;
		char oper, ch;
		int a, b, c, d, sum;
		char slash = '/';

		do {
			cout << "Введите оператор (+, -, *, /): ";
			cin >> oper;
			switch (oper)
			{
			case '+': {
				cout << "Введите первую дробь: ";
				cin >> a >> slash >> b;
				cout << "Введите вторую дробь: ";
				cin >> c >> slash >> d;
				if ((a * d + b * c) == (b * d))cout << "Сумма равна " << (a * d + b * c) / (b * d) << endl;
				else cout << "Сумма равна " << (a * d + b * c) << slash << (b * d) << endl;
			} break;
			case '-': {
				cout << "Введите первую дробь: ";
				cin >> a >> slash >> b;
				cout << "Введите вторую дробь: ";
				cin >> c >> slash >> d;
				if ((a * d + b * c) == (b * d))cout << "Разность равна " << (a * d - b * c) / (b * d) << endl;
				else cout << "Разность равна " << (a * d - b * c) << slash << (b * d) << endl;
			} break;
			case '*': {
				cout << "Введите первую дробь: ";
				cin >> a >> slash >> b;
				cout << "Введите вторую дробь: ";
				cin >> c >> slash >> d;
				if ((a * c) == (b * d)) cout << "Результат умножения равен " << (a * c) / (b * d) << endl;
				else cout << "Результат умножения равен " << (a * c) << slash << (b * d) << endl;
			} break;
			case '/': {
				cout << "Введите первую дробь: ";
				cin >> a >> slash >> b;
				cout << "Введите вторую дробь: ";
				cin >> c >> slash >> d;
				if ((a * d) == (b * c))cout << "Результат деления равен " << (a * d) / (b * c) << endl;
				else cout << "Результат деления равен " << (a * d) << slash << (b * c) << endl;
			} break;
			default: ans = 0;
			}
			cout << "Вы хотете продолжить? (да = y, нет = n) ";
			cin >> ch;
		} while (ch != 'n');
	}break;
	}
}